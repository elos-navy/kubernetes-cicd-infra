---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: _PREFIX_jenkins-pv-claim
  labels:
    app: _PREFIX_jenkins
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: _PREFIX_jenkins
  name: _PREFIX_jenkins
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: _PREFIX_jenkins
    spec:
      containers:
      - name: jenkins
        image: openshift/jenkins-2-centos7:latest
        ports:
        - containerPort: 8080
        - containerPort: 50000
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
          failureThreshold: 5
        env:
        - name: JAVA_OPTS
          value: "-Djenkins.install.runSetupWizard=false"
        - name: JENKINS_PASSWORD
          value: "xxxxxx"
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
      initContainers:
      - name: install-plugins
        image: openshift/jenkins-2-centos7:latest
        command:
          - /bin/sh
          - -c
          - install-plugins.sh < /mnt/plugins.txt
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
        - mountPath: /mnt
          name: jenkins-plugins
      - name: prepare-jobs
        image: openshift/jenkins-2-centos7:latest
        command:
          - /bin/sh
          - -c
          - mkdir -p /var/lib/jenkins/jobs/cicd-components-pipeline/builds; cd /var/lib/jenkins/jobs/cicd-components-pipeline/builds; touch legacyIds; ln -s ./-1 lastFailedBuild; ln -s ./-1 lastStableBuild; ln -s ./-1 lastSuccessfulBuild; ln -s ./-1 lastUnstableBuild; ln -s ./-1 lastUnsuccessfulBuild; cp /mnt/config.xml /var/lib/jenkins/jobs/cicd-components-pipeline/
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
        - mountPath: /mnt
          name: components-job
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: _PREFIX_jenkins-pv-claim
      - name: jenkins-plugins
        configMap:
          name: _PREFIX_jenkins-plugins
      - name: components-job
        configMap:
          name: _PREFIX_components-job
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: _PREFIX_jenkins
  name: _PREFIX_jenkins
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: _PREFIX_jenkins
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: _PREFIX_jenkins
  name: _PREFIX_jenkins-plugins
data:
  plugins.txt: |-
    pam-auth:1.3
    ldap:1.20
    email-ext:2.63
    kubernetes-cd:0.2.3
    azure-commons:0.2.6
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: _PREFIX_jenkins
  name: cicd-components-job
data:
  config.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <flow-definition plugin="workflow-job@2.29">
      <description></description>
      <keepDependencies>false</keepDependencies>
      <properties>
        <io.fabric8.jenkins.openshiftsync.BuildConfigProjectProperty plugin="openshift-sync@1.0.27">
          <uid></uid>
          <namespace></namespace>
          <name></name>
          <resourceVersion></resourceVersion>
        </io.fabric8.jenkins.openshiftsync.BuildConfigProjectProperty>
      </properties>
      <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.61.1">
        <script>node {
      stage(&apos;testik&apos;) {
        sh &apos;sleep 1&apos;
      }
    }</script>
        <sandbox>true</sandbox>
      </definition>
      <triggers/>
      <disabled>false</disabled>
    </flow-definition>
